---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prod-manager
    component: app
  name: prod-manager
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 50%
  selector:
    matchLabels:
      app: prod-manager
      component: app
  template:
    metadata:
      labels:
        app: prod-manager
        component: app
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      initContainers:
      - image: registry.gitlab.com/prod-manager/prod-manager:latest
        imagePullPolicy: Always
        name: database
        command: ["make", "database-upgrade"]
        envFrom:
        - secretRef:
            name: prod-manager
        resources:
          requests:
            cpu: 50m
            memory: 20M
          limits:
            cpu: 250m
            memory: 100M
      containers:
      - image: registry.gitlab.com/prod-manager/prod-manager:latest
        imagePullPolicy: Always
        name: app
        env:
        - name: PORT
          value: "8080"
        ports:
        - name: http
          containerPort: 8080
        envFrom:
        - secretRef:
            name: prod-manager
        resources:
          requests:
            cpu: 50m
            memory: 100M
          limits:
            cpu: 500m
            memory: 150M
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: http
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: http
          initialDelaySeconds: 3
          periodSeconds: 3
        startupProbe:
          httpGet:
            path: /health/startup
            port: http
          initialDelaySeconds: 3
          periodSeconds: 3
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
      volumes:
        - name: tz-config
          hostPath:
            path: /usr/share/zoneinfo/Europe/Paris
            type: File
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: prod-manager
                  component: app
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                  app: prod-manager
                  component: app
            topologyKey: kubernetes.io/hostname
