"""0.3.0

Revision ID: 5c889d53d173
Revises: 647227471a57
Create Date: 2022-06-07 22:52:38.546822

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.sqlite.base import SQLiteDialect


# revision identifiers, used by Alembic.
revision = '5c889d53d173'
down_revision = '647227471a57'
branch_labels = None
depends_on = None

old_incident_status_options = ('ACTIVE', 'STABLE', 'RESOLVED', 'COMPLETED')
new_incident_status_options = ('ACTIVE', 'INVESTIGATING', 'STABLE', 'RESOLVED')

old_incident_status = sa.Enum(*old_incident_status_options, name='incidentstatus')
new_incident_status = sa.Enum(*new_incident_status_options, name='incidentstatus')
tmp_incident_status = sa.Enum(*new_incident_status_options, name='_incidentstatus')


old_maintenance_status_options = ('CREATED', 'VALIDATED', 'SHEDULED', 'IN_PROGRESS', 'SUCCESS', 'FAILED')
new_maintenance_status_options = ('SCHEDULED', 'IN_PROGRESS', 'SUCCEED', 'FAILED')

old_maintenance_status = sa.Enum(*old_maintenance_status_options, name='maintenancestatus')
new_maintenance_status = sa.Enum(*new_maintenance_status_options, name='maintenancestatus')
tmp_maintenance_status = sa.Enum(*new_maintenance_status_options, name='_maintenancestatus')


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('incident', sa.Column('investigation_date', sa.DateTime(), nullable=True))
    op.add_column('incident', sa.Column('stable_date', sa.DateTime(), nullable=True))

    op.alter_column('maintenance', 'service_planned_status', new_column_name='service_status')

    if not isinstance(op.get_bind().dialect, SQLiteDialect):
        tmp_incident_status.create(op.get_bind(), checkfirst=False)
        op.execute("""
            ALTER TABLE incident
            ALTER COLUMN status TYPE _incidentstatus
            USING status::text::_incidentstatus
        """)
        old_incident_status.drop(op.get_bind(), checkfirst=False)
        new_incident_status.create(op.get_bind(), checkfirst=False)
        op.execute("""
            ALTER TABLE incident
            ALTER COLUMN status TYPE incidentstatus
            USING status::text::incidentstatus
        """)
        tmp_incident_status.drop(op.get_bind(), checkfirst=False)

        tmp_maintenance_status.create(op.get_bind(), checkfirst=False)
        op.execute("""
            ALTER TABLE maintenance
            ALTER COLUMN status TYPE _maintenancestatus
            USING status::text::_maintenancestatus
        """)
        old_maintenance_status.drop(op.get_bind(), checkfirst=False)
        new_maintenance_status.create(op.get_bind(), checkfirst=False)
        op.execute("""
            ALTER TABLE maintenance
            ALTER COLUMN status TYPE maintenancestatus
            USING status::text::maintenancestatus
        """)
        tmp_maintenance_status.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('incident', 'investigation_date')
    op.drop_column('incident', 'stable_date')

    op.alter_column('maintenance', 'service_status', new_column_name='service_planned_status')

    if not isinstance(op.get_bind().dialect, SQLiteDialect):
        tmp_incident_status.create(op.get_bind(), checkfirst=False)
        op.execute("""
            ALTER TABLE incident
            ALTER COLUMN status TYPE _incidentstatus
            USING status::text::_incidentstatus
        """)
        new_incident_status.drop(op.get_bind(), checkfirst=False)
        old_incident_status.create(op.get_bind(), checkfirst=False)
        op.execute("""
            ALTER TABLE incident
            ALTER COLUMN status TYPE incidentstatus
            USING status::text::incidentstatus
        """)
        tmp_incident_status.drop(op.get_bind(), checkfirst=False)

        tmp_maintenance_status.create(op.get_bind(), checkfirst=False)
        op.execute("""
            ALTER TABLE maintenance
            ALTER COLUMN status TYPE _maintenancestatus
            USING status::text::_maintenancestatus
        """)
        new_maintenance_status.drop(op.get_bind(), checkfirst=False)
        old_maintenance_status.create(op.get_bind(), checkfirst=False)
        op.execute("""
            ALTER TABLE maintenance
            ALTER COLUMN status TYPE maintenancestatus
            USING status::text::maintenancestatus
        """)
        tmp_maintenance_status.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
